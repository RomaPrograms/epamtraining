//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB)
// Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source
// schema.
// Generated on: 2019.03.28 at 10:10:01 PM MSK
//


package by.training.webparsing.devices;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the by.training.webparsing.devices package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _PeripheralDevice_QNAME
            = new QName("http://www.webparsing.training.by/devices",
            "peripheralDevice");
    private final static QName _Device_QNAME
            = new QName("http://www.webparsing.training.by/devices",
            "device");
    private final static QName _InnerDevice_QNAME
            = new QName("http://www.webparsing.training.by/devices",
            "innerDevice");

    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package: by.training.webparsing.devices.
     *
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Devices }.
     * @return list of devices
     */
    public Devices createDevices() {
        return new Devices();
    }

    /**
     * Create an instance of {@link PeripheralDevice }.
     * @return object of class Peripheral Device
     */
    public PeripheralDevice createPeripheralDevice() {
        return new PeripheralDevice();
    }

    /**
     * Create an instance of {@link InnerDevice }.
     * @return object of class InnerDevice
     */
    public InnerDevice createInnerDevice() {
        return new InnerDevice();
    }

    /**
     * Create an instance of {@link Type }.
     * @return object of class Type
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link PeripheralDevice }{@code >}}.
     *
     */
    @XmlElementDecl(namespace = "http://www.webparsing.training.by/devices",
            name = "peripheralDevice", substitutionHeadNamespace
            = "http://www.webparsing.training.by/devices",
            substitutionHeadName = "device")
    public JAXBElement<PeripheralDevice>
    createPeripheralDevice(final PeripheralDevice value) {
        return new JAXBElement<PeripheralDevice>(_PeripheralDevice_QNAME,
                PeripheralDevice.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@linkDeviceType}{@code >}}.
     *
     */
    @XmlElementDecl(namespace = "http://www.webparsing.training.by/devices",
            name = "device")
    public JAXBElement<DeviceType> createDevice(final DeviceType value) {
        return new JAXBElement<DeviceType>(_Device_QNAME, DeviceType.class,
                null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@linkInnerDevice }{@code >}}.
     *
     */
    @XmlElementDecl(namespace = "http://www.webparsing.training.by/devices",
            name = "innerDevice", substitutionHeadNamespace
            = "http://www.webparsing.training.by/devices",
            substitutionHeadName = "device")
    public JAXBElement<InnerDevice> createInnerDevice(final InnerDevice value) {
        return new JAXBElement<InnerDevice>(_InnerDevice_QNAME,
                InnerDevice.class, null, value);
    }

}
